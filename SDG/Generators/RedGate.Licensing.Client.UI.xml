<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RedGate.Licensing.Client.UI</name>
    </assembly>
    <members>
        <member name="M:RedGate.Licensing.Client.UI.ActivationViaProxyEngine.#ctor(RedGate.Licensing.Client.LicenceEngineBase,RedGate.Licensing.Client.Licence[])">
            <summary>
            Create an activation provider for the given Licences using the given LicenceEngine
            </summary>
            <param name="licenceEngine"></param>
            <param name="licences"></param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.ActivationViaProxyEngine.#ctor(RedGate.Licensing.Client.LicenceEngineBase,RedGate.Licensing.Client.Licence,RedGate.Licensing.Client.Providers.IRegistryProvider)">
            <summary>
            Create an activation provider for the given Licence using the given LicenceEngine
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.ActivationViaProxyEngine.#ctor(RedGate.Licensing.Client.LicenceEngineBase,RedGate.Licensing.Client.Licence[],RedGate.Licensing.Client.Providers.IRegistryProvider)">
            <summary>
            Create an activation provider for the given Licences using the given LicenceEngine
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.ActivationViaProxyEngine.WebServiceCall(RedGate.Licensing.Client.WebService.Activation,System.Boolean@,System.String@,System.String@)">
            <summary>
            The inner function that actually attempts to perform the activation
            </summary>
        </member>
        <member name="T:RedGate.Licensing.Client.UI.Pages.SetProgress">
            <summary>
            Call this function to set the progress on the page
            </summary>
            <param name="progressStatus"></param>
        </member>
        <member name="T:RedGate.Licensing.Client.UI.Pages.WorkerFunction">
            <summary>
            Perform the work that this page represents
            </summary>
            <param name="progressFunction"></param>
            <param name="manualActivation">if set to true the ManualActivation property of the progressing page will be set to true also</param>
            <returns></returns>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Proxy.ProxyServiceCall``1(System.IntPtr,RedGate.Licensing.Client.WebService.Activation,RedGate.Licensing.Client.UI.Proxy.ActivationCall{``0},``0,System.Boolean@,System.String@,System.String@)">
            <summary>
            The inner function that actually attempts to perform the activation
            </summary>
        </member>
        <member name="F:RedGate.Licensing.Client.UI.Controls.ProductStatus.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.ProductStatus.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.ProductStatus.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RedGate.Licensing.Client.UI.Controls.ReliableTimer">
            <summary>
            A timer that actually works, and only uses one thread.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.ReliableTimer.OnTick(System.EventArgs)">
            <summary>
            Fires the <see cref="E:RedGate.Licensing.Client.UI.Controls.ReliableTimer.Tick"/> event with the specified EventArgs.
            </summary>
            <param name="e">The EventArgs object to pass to the event handlers.</param>
        </member>
        <member name="E:RedGate.Licensing.Client.UI.Controls.ReliableTimer.Tick">
            <summary>
            This event fires every <see cref="P:RedGate.Licensing.Client.UI.Controls.ReliableTimer.Period"/> milliseconds.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Controls.ReliableTimer.Period">
            <summary>
            Gets or sets the number of milliseconds between ticks. Setting this to zero
            or <see cref="F:System.Threading.Timeout.Infinite"/> pauses the timer, setting it negative stops the timer.
            </summary>
        </member>
        <member name="F:RedGate.Licensing.Client.UI.Controls.RichTextLabel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.RichTextLabel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.RichTextLabel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RedGate.Licensing.Client.UI.Controls.RichTextLabelControl">
            <summary>
            DO NOT USE THIS CLASS - use the RichTextLabel
            </summary>
        </member>
        <member name="T:RedGate.Licensing.Client.UI.Controls.Spinner">
            <summary>
            This component runs the timing for <see cref="T:RedGate.Licensing.Client.UI.Controls.SpinnyWidget"/> and <see cref="M:RedGate.Licensing.Client.UI.Controls.Spinner.DrawSpinner(System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle)"/> controls on a page.
            Without this the controls do not update. Call <see cref="M:RedGate.Licensing.Client.UI.Controls.Spinner.StopSpinning(System.Windows.Forms.Control)"/> in order to prevent a control
            retrieving redraw messages (<see cref="T:RedGate.Licensing.Client.UI.Controls.SpinnyWidget"/> does this internally for itself).
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.Spinner.#ctor">
            <summary>
            Contruct a spinny drawer - default 50ms spin image interval
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.Spinner.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Contruct a spinny drawer - default 50ms spin image interval
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.Spinner.InitializeSpinner(System.Int32)">
            <summary>
            Load up the images and start the timer
            </summary>
            <param name="spinSpeed"></param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.Spinner.StopSpinning(System.Windows.Forms.Control)">
            <summary>
            This will prevent the shared spinner forcing refreshes for the given
            window
            </summary>
            <param name="window"></param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.Spinner.DrawSpinner(System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw a spinner at the given coordinates using the supplied
            Graphics object.
            </summary>
            <remarks>
            In addition to drawing the spinner, this method uses the supplied
            Control and rectangle to remember a list of regions, per window,
            in which spinners have been drawn. When the spinner image is due
            to tick around to the next image, these regions will automatically
            be invalidated via window.Invalidate(region). The window is expected
            to then call DrawSpinner() again if a spinner is still appropriate,
            and so on, until the spinner is no longer required.
            Multiple spinners are permitted per window; multiple DrawSpinner()
            calls will result in a region being created containing all spinner
            rectangles, and the whole region will be invalidated when the
            spinner image changes.
            </remarks>
            <param name="window">The window to which the image will be drawn.</param>
            <param name="graphics">The graphics object with which to draw.</param>
            <param name="rect">The rectangle which the spinner should occupy.</param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.Spinner.DoSpin(System.Object,System.EventArgs)">
            <summary>
            Updates the spinner to the next image. If you wish to fire this handler yourself, 
            set the <see cref="P:RedGate.Licensing.Client.UI.Controls.Spinner.SpinSpeed"/> to zero to stop the automated timer firing this event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:RedGate.Licensing.Client.UI.Controls.Spinner.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.Spinner.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.Spinner.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:RedGate.Licensing.Client.UI.Controls.Spinner.ImageChanged">
            <summary>
            Fired on a timer whenever the spinner image changes.
            Whilst the Spinner class exists, this occurs regularly,
            regardless of whether a spinner is currently visible
            in any window. See also the SpinnerImage property.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Controls.Spinner.SpinnerImage">
            <summary>
            Direct access to the current spinner image, in case the caller
            wishes to implement their own spinner draw/invalidate cycle.
            See also the ImageChanged event.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Controls.Spinner.SpinSpeed">
            <summary>
            Spin speed measured in milliseconds. The default value is 50.
            Set to zero to stop spinning.
            </summary>
        </member>
        <member name="T:RedGate.Licensing.Client.UI.Controls.SpinnyWidget">
            <summary>
            This class provides a Spinny that can be used to overwrite a control with a spinner image, on
            a single form all controls can share a single <see cref="P:RedGate.Licensing.Client.UI.Controls.Spinner.SpinSpeed"/> which causes the repaints to occur.
            This means changing the <see cref="T:RedGate.Licensing.Client.UI.Controls.Spinner"/> for any control affects all controls using
            that <see cref="T:RedGate.Licensing.Client.UI.Controls.Spinner"/>
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.SpinnyWidget.#ctor">
            <summary>
            Construct a Spinny Widget
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.SpinnyWidget.SpinnyWidget_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draw the text and the spinny image on the control
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.SpinnyWidget.SpinnyWidget_Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
            <summary>
            When the control is layed out I may need to move it if it's covering
            another control as this could have been set in the designer.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:RedGate.Licensing.Client.UI.Controls.SpinnyWidget.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.SpinnyWidget.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Controls.SpinnyWidget.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Controls.SpinnyWidget.Spin">
            <summary>
            Sets whether the spinny is spinning or not. If <see cref="P:RedGate.Licensing.Client.UI.Controls.SpinnyWidget.CoverControl"/>
            is not null, the spinny will hide or cover <see cref="P:RedGate.Licensing.Client.UI.Controls.SpinnyWidget.CoverControl"/> as appropriate.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Controls.SpinnyWidget.CoverControl">
            <summary>
            The control that this widget will cover.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Controls.SpinnyWidget.SpinText">
            <summary>
            The text that is shown below the spinner
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Controls.SpinnyWidget.SpinnerDrawer">
            <summary>
            This is spinner drawer component used for timing the draws to this control
            </summary>
        </member>
        <member name="T:RedGate.Licensing.Client.UI.Credui">
            <summary>
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnnetsec/html/dpapiusercredentials.asp
            http://www.developerfusion.co.uk/scripts/print.aspx?id=4693
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.DeactivationViaProxyEngine.#ctor(RedGate.Licensing.Client.LicenceEngineBase,RedGate.Licensing.Client.Licence)">
            <summary>
            Convenience override to deactivate all licences for given primary licence
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.DeactivationViaProxyEngine.#ctor(RedGate.Licensing.Client.LicenceEngineBase,RedGate.Licensing.Client.Licence,RedGate.Licensing.Client.Providers.IRegistryProvider)">
            <summary>
            Convenience override to deactivate all licences for given primary licence
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.DeactivationViaProxyEngine.#ctor(RedGate.Licensing.Client.LicenceEngineBase,System.Collections.Generic.IList{RedGate.Licensing.Client.Licence})">
            <summary>
            Create an deactivation provider for the set of licences using the given LicenceEngine.
            If your product uses shared serial numbers you should either use GetAllLicences to retrieve
            the list of activated product - or easier use the override to pass in a primary licence
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.DeactivationViaProxyEngine.#ctor(RedGate.Licensing.Client.LicenceEngineBase,System.Collections.Generic.IList{RedGate.Licensing.Client.Licence},RedGate.Licensing.Client.Providers.IRegistryProvider)">
            <summary>
            Create an deactivation provider for the set of licences using the given LicenceEngine.
            If your product uses shared serial numbers you should either use GetAllLicences to retrieve
            the list of activated product - or easier use the override to pass in a primary licence
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.DeactivationViaProxyEngine.WebServiceCall(RedGate.Licensing.Client.WebService.Activation,System.Boolean@,System.String@,System.String@)">
            <summary>
            The actual web service call routine
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.DeactivationWizard.DeactivationFailure(RedGate.Licensing.Client.DeactivationException)">
            <summary>
            Called when the activation has failed - presents the LicensingForm+ErrorPage
            </summary>
            <param name="de"></param>
            <returns>true when manual activation is requested - false otherwise</returns>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.DeactivationWizard.Completed">
            <summary>
            Was the wizard completed or did the user cancel?
            </summary>
        </member>
        <member name="T:RedGate.Licensing.Client.UI.EnterPassword">
            <summary>
            Summary description for EnterPassword.
            </summary>
        </member>
        <member name="F:RedGate.Licensing.Client.UI.EnterPassword.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.EnterPassword.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.EnterPassword.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RedGate.Licensing.Client.UI.ErrorMessage">
            <summary>
            Class representing an error message that was returned from the licensing
            server, or even generated by the license engine itself
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.ErrorMessage.#ctor(System.String)">
            <summary>
            Contruct an error message object from the xml error message returned
            from the licensing server or generated internally
            </summary>
            <param name="xmlError"></param>
        </member>
        <member name="T:RedGate.Licensing.Client.UI.Html2Rtf">
            <summary>
            Contains a helper to convert the pseudo-HTML-help-format-text-thingy into RTF for display,
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Html2Rtf.ConvertHtml2Rtf(System.String)">
            <summary>
            Converts the pseudo-HTML-help-format-text-thingy into RTF for display.
            </summary>
            <param name="html"></param>
            <returns></returns>        
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Html2Rtf.ConvertHtml2Rtf(System.String,System.String@,System.Drawing.Size@)">
            <summary>
            Converts the pseudo-HTML-help-format-text-thingy into RTF for display,
            oh an it it gives you the title and dimensions as well apparantly!
            </summary>
            <param name="html"></param>
            <param name="title"></param>
            <param name="dimensions"></param>
            <returns></returns>        
        </member>
        <member name="T:RedGate.Licensing.Client.UI.ILicensingPage">
            <summary>
            Very simple interface for licensing wizard pages
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.ILicensingPage.StartPage(RedGate.Licensing.Client.UI.LicensingForm)">
            <summary>
            Called just before the control is shown for the first
            time on the wizard
            </summary>
            <param name="form">The licensing form this control is about to go onto</param>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.ILicensingPage.Title">
            <summary>
            Title of the wizard page
            </summary>
        </member>
        <member name="T:RedGate.Licensing.Client.UI.LicensingForm">
            <summary>
            Very simple page that all the licensing pages look like
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.LicensingForm.#ctor(System.Drawing.Icon,System.Drawing.Image)">
            <summary>
            Create licensing form.
            </summary>
            <param name="icon">The icon displayed on toolbar, can be null</param>
            <param name="image">This is the image that can appear on the lhs</param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.LicensingForm.SetControl(RedGate.Licensing.Client.UI.ILicensingPage,System.Int32)">
            <summary>
            Sets a control into the licensing page
            </summary>
            <param name="page"></param>
            <param name="pageId"></param>
        </member>
        <member name="F:RedGate.Licensing.Client.UI.LicensingForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.LicensingForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.LicensingForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:RedGate.Licensing.Client.UI.LicensingForm.OtherButtonClicked">
            <summary>
            Fired when the "Other" button is clicked
            </summary>
        </member>
        <member name="E:RedGate.Licensing.Client.UI.LicensingForm.AcceptButtonClicked">
            <summary>
            Fired when the accept button is clicked
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.LicensingForm.OtherButton">
            <summary>
            Accessor to get at the "Other" button
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.LicensingForm.PageId">
            <summary>
            Page id - can be used by wizards
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.LicensingForm.Spinner">
            <summary>
            Get the licensing spinner - don't want more of these thread things
            that necessary.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.ChooseProductsPage.StartPage(RedGate.Licensing.Client.UI.LicensingForm)">
            <summary>
            Called just before the control is shown for the first
            time on the wizard
            </summary>
            <param name="form">The licensing form this control is about to go onto</param>
        </member>
        <member name="F:RedGate.Licensing.Client.UI.Pages.ChooseProductsPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.ChooseProductsPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.ChooseProductsPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Pages.ChooseProductsPage.Title">
            <summary>
            Title of the wizard page
            </summary>
        </member>
        <member name="T:RedGate.Licensing.Client.UI.Pages.EnterSerialNumberPage">
            <summary>
            Intial page of the activation wizard where I ask you for a serial number, or fill
            in your current serial number if you're activated already.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.EnterSerialNumberPage.StartPage(RedGate.Licensing.Client.UI.LicensingForm)">
            <summary>
            Called just before the control is shown for the first
            time on the wizard
            </summary>
            <param name="form">The licensing form this control is about to go onto</param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.EnterSerialNumberPage.UpdateButtonAvailability">
            <summary>
            Lets fiddle with the controls and give you the ones you should have
            </summary>
        </member>
        <member name="F:RedGate.Licensing.Client.UI.Pages.EnterSerialNumberPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.EnterSerialNumberPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.EnterSerialNumberPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Pages.EnterSerialNumberPage.SerialNumber">
            <summary>
            Gets the serial number
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Pages.EnterSerialNumberPage.TrackActivation">
            <summary>
            Gets if to track this activation
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Pages.EnterSerialNumberPage.Email">
            <summary>
            Gets the email
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Pages.EnterSerialNumberPage.ShowManualActivation">
            <summary>
            True to show the manual activation button, false otherwise
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Pages.EnterSerialNumberPage.SubscribeToNewsLetter">
            <summary>
            Returns true if the customer selected to subscribe to the newsletter
            If they didn't specify the email address the Checked state is ignored
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Pages.EnterSerialNumberPage.Title">
            <summary>
            Title of the wizard page
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.ErrorPage.StartPage(RedGate.Licensing.Client.UI.LicensingForm)">
            <summary>
            Called just before the control is shown for the first
            time on the wizard
            </summary>
            <param name="form">The licensing form this control is about to go onto</param>
        </member>
        <member name="F:RedGate.Licensing.Client.UI.Pages.ErrorPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.ErrorPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.ErrorPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Pages.ErrorPage.Title">
            <summary>
            Title of the wizard page
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.ManualActivationPage.StartPage(RedGate.Licensing.Client.UI.LicensingForm)">
            <summary>
            Called just before the control is shown for the first
            time on the wizard
            </summary>
            <param name="form">The licensing form this control is about to go onto</param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.ManualActivationPage.ValidResponse(System.String,System.String@)">
            <summary>
            Check whenever the response changes that it's valid
            </summary>
            <param name="strTxt"></param>
            <param name="strVerified"></param>
            <returns></returns>
        </member>
        <member name="F:RedGate.Licensing.Client.UI.Pages.ManualActivationPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.ManualActivationPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.ManualActivationPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Pages.ManualActivationPage.Title">
            <summary>
            Title of the wizard page
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Pages.ManualActivationPage.Response">
            <summary>
            The valid response ready for activation
            </summary>
        </member>
        <member name="T:RedGate.Licensing.Client.UI.Pages.ProgressingPage">
            <summary>
            This page is a spinny with progress function
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.ProgressingPage.StartPage(RedGate.Licensing.Client.UI.LicensingForm)">
            <summary>
            Called just before the control is shown for the first
            time on the wizard
            </summary>
            <param name="form">The licensing form this control is about to go onto</param>
        </member>
        <member name="F:RedGate.Licensing.Client.UI.Pages.ProgressingPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.ProgressingPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.ProgressingPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Pages.ProgressingPage.Title">
            <summary>
            Title of the wizard page
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.SuccessPage.StartPage(RedGate.Licensing.Client.UI.LicensingForm)">
            <summary>
            Called just before the control is shown for the first
            time on the wizard
            </summary>
            <param name="form">The licensing form this control is about to go onto</param>
        </member>
        <member name="F:RedGate.Licensing.Client.UI.Pages.SuccessPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.SuccessPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.Pages.SuccessPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Pages.SuccessPage.Title">
            <summary>
            Title of the wizard page
            </summary>
        </member>
        <member name="T:RedGate.Licensing.Client.UI.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.check">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Deactivate_Above">
            <summary>
              Looks up a localized string similar to &lt;html&gt;&lt;body&gt;&lt;p&gt;All products associated with the selected serial number will be deactivated.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Deactivate_Title">
            <summary>
              Looks up a localized string similar to Products associated with this serial number.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.EnterSerialNumber_Above">
            <summary>
              Looks up a localized string similar to &lt;html&gt;&lt;body&gt;&lt;p&gt;Your serial number is on your invoice or you can &lt;a href=&quot;http://www.red-gate.com/myserialnumbers&quot;&gt;find it online&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.EnterSerialNumber_AdditionalInformation">
            <summary>
              Looks up a localized string similar to &lt;html&gt;&lt;body&gt;&lt;p&gt;Please provide the email address you would like us to send update notifications to:&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.EnterSerialNumber_Below">
            <summary>
              Looks up a localized string similar to &lt;html&gt;&lt;body&gt;&lt;p&gt;&lt;small&gt;If you purchased {0} as part of a bundle, other products may be activated by this process. The products activated are listed when activation is completed.&lt;/small&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.EnterSerialNumber_PrivacyPolicy">
            <summary>
              Looks up a localized string similar to &lt;html&gt;&lt;body&gt;&lt;p&gt;&lt;a href=&quot;http://www.red-gate.com/our-company/about/legal&quot;&gt;Read our privacy policy&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.EnterSerialNumber_Title">
            <summary>
              Looks up a localized string similar to Enter your {0} serial number.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.ErrCred">
            <summary>
              Looks up a localized string similar to Unexpected credential problem {0}.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Error32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.ErrPassword">
            <summary>
              Looks up a localized string similar to Unexpected password problem.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.ErrUser">
            <summary>
              Looks up a localized string similar to Unexpected user name problem {0}.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.ExclusiveError">
             <summary>
               Looks up a localized string similar to &lt;Error&gt;
              &lt;Title&gt;Unable to continue&lt;/Title&gt;
              &lt;Image&gt;Error&lt;/Image&gt;
              &lt;ManualButton show=&quot;true&quot;/&gt;
              &lt;Description&gt;
                &lt;html&gt;
                  &lt;body&gt;
                    &lt;p&gt;The Red Gate activation program is already running. Only one copy of the activation program can run at once.&lt;br/&gt;
            &lt;br/&gt;
            If you are activating or deactivating another product, close that copy of the activation program, and click Retry.&lt;/p&gt;
                  &lt;/body&gt;
                &lt;/html&gt;
              &lt;/Description&gt;
            &lt;/Error&gt;.
             </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.folder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Html2Rtf">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
            &lt;xsl:stylesheet version=&quot;1.0&quot;
                xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
                xmlns=&quot;http://www.w3.org/1999/xhtml&quot;
                xmlns:xhtml=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
              &lt;xsl:output method=&quot;text&quot;/&gt;
            
              &lt;xsl:template match=&quot;xhtml:html|html&quot;&gt;
                &lt;xsl:text&gt;{\rtf1\ansi\deff0{\fonttbl{\f0 Tahoma;}{\f1 Courier New;}}
            {\colortbl;\red128\green0\blue0;\red0\green0\blue255}&lt;/xsl:text&gt;
                &lt;xsl:apply-templates select=&quot;xhtml:body/*|body/*&quot;/&gt;
                &lt;xsl:text&gt;
            }&lt;/xsl:t [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.HTTPProxyAuthFailed">
            <summary>
              Looks up a localized string similar to HTTP Proxy authentication failed.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.HTTPProxyAuthNeeded">
            <summary>
              Looks up a localized string similar to HTTP Proxy authentication required.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.ManualActivation_CancelWarning">
             <summary>
               Looks up a localized string similar to &lt;Error&gt;
            &lt;Title&gt;Activation is not complete&lt;/Title&gt;
            &lt;ManualButton show=&quot;true&quot;/&gt;
            &lt;Description&gt;&lt;html&gt;&lt;body&gt;&lt;p&gt;If you received an activation response and you exit the activation process now, you will not be able to activate your products.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&lt;/Description&gt;&lt;/Error&gt;.
             </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.ManualActivation_Request">
            <summary>
              Looks up a localized string similar to &lt;html&gt;&lt;body&gt;&lt;p&gt;Copy the text in the box below, and paste it into the box at: &lt;br/&gt;&lt;a href=&quot;http://www.red-gate.com/activate&quot;&gt;http://www.red-gate.com/activate&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.MaunalActivation_Response">
            <summary>
              Looks up a localized string similar to &lt;html&gt;&lt;body&gt;&lt;p&gt;Paste the activation response on the Manual Activation page of the Red Gate Web site into the box below.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.MessageCancel">
            <summary>
              Looks up a localized string similar to User has cancelled connection.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.RedGate60px">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.save">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Spinner0">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Spinner1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Spinner10">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Spinner11">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Spinner2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Spinner3">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Spinner4">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Spinner5">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Spinner6">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Spinner7">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Spinner8">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Spinner9">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.TrackActivation">
            <summary>
              Looks up a localized string similar to &lt;html&gt;&lt;body&gt;&lt;p&gt;This is useful if you contact support about your activations. &lt;a href=&quot;http://www.red-gate.com/activation/tracking&quot;&gt;More information&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;.
            </summary>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.Properties.Resources.Warning32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.ActivationWizard.Activate(RedGate.Licensing.Client.UI.Pages.SetProgress,System.Boolean@)">
            <summary>
            The function used to activate the license - used by the ProgressingPage
            </summary>
            <param name="progressFunction">callback to set progress</param>
            <param name="manualActivation">true is manual activation is requested, false otherwise</param>
            <returns>true if activations was all good, false otherwise</returns>
        </member>
        <member name="M:RedGate.Licensing.Client.UI.ActivationWizard.ActivationFailure(RedGate.Licensing.Client.ActivationException)">
            <summary>
            Called when the activation has failed - presents the LicensingForm+ErrorPage
            </summary>
            <param name="ae"></param>
            <returns>true when manual activation is requested - false otherwise</returns>
        </member>
        <member name="P:RedGate.Licensing.Client.UI.ActivationWizard.Completed">
            <summary>
            Was the wizard completed or did the user cancel?
            </summary>
        </member>
    </members>
</doc>
